@import "colors";
@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

atom-text-editor .gutter {
  background-color: @syntax-gutter-background-color;
  color: @syntax-gutter-text-color;
}

atom-text-editor .gutter .line-number.cursor-line {
  background-color: @syntax-gutter-background-color-selected;
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .gutter .line-number.cursor-line-no-selection {
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .wrap-guide {
  color: @syntax-wrap-guide-color;
}

atom-text-editor .indent-guide {
  color: @syntax-indent-guide-color;
}

atom-text-editor .invisible-character {
  color: @syntax-invisible-character-color;
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: @syntax-result-marker-color-selected;
}

atom-text-editor.is-focused .cursor {
  border-color: @syntax-cursor-color;
}

atom-text-editor.is-focused .selection .region {
  background-color: @syntax-selection-color;
}

atom-text-editor.is-focused .line-number.cursor-line-no-selection, atom-text-editor.is-focused .line.cursor-line {
  background-color: @yellow-dark;
}

// Tree view Styles
atom-panel {
  .tool-panel .list-tree li {
    // Modified tree element
    &:not(.list-nested-item).selected.status-modified, &:not(.list-nested-item).selected.status-modified, &.list-nested-item.selected.status-modified > .list-item, &.list-nested-item.selected.status-modified > .list-item {
      color: @yellow-light;
    }
    &:not(.list-nested-item).status-modified, &:not(.list-nested-item).status-modified, &.list-nested-item.status-modified > .list-item, &.list-nested-item.status-modified > .list-item {
      color: @yellow-light;
    }

    // New tree element
    &:not(.list-nested-item).selected.status-added, &:not(.list-nested-item).selected.status-added, &.list-nested-item.selected.status-added > .list-item, &.list-nested-item.selected.status-added > .list-item {
      color: @green-dark;
    }

    &:not(.list-nested-item).status-added, &:not(.list-nested-item).status-added, &.list-nested-item.status-added > .list-item, &.list-nested-item.status-added > .list-item {
      color: @green-dark;
    }
  }
}


// Syntax Styles
.syntax--comment {
  color: @blue-gray-dark;
}

.syntax--string {
  color: @yellow-light;
}

.syntax--constant.syntax--numeric {
  color: @green;
}

.syntax--constant.syntax--language {
  color: @red-light;
}

.syntax--constant.syntax--character, .syntax--constant.syntax--other {
  color: @red-light;
}

.syntax--variable {}

.syntax--keyword {
  color: @green-translucent;
}

.syntax--storage {
  color: @yellow-light;
}

.syntax--storage.syntax--syntax--type {
  font-style: italic;
  color: @cyan;
}

.syntax--entity.syntax--name.syntax--class {
  text-decoration: underline;
  color: @green-dark;
}

.syntax--entity.syntax--other.syntax--inherited-class {
  font-style: italic;
  text-decoration: underline;
  color: @green-dark;
}

.syntax--entity.syntax--name.syntax--function {
  color: @green-dark;
}

.syntax--variable.syntax--parameter {
  font-style: italic;
  color: @orange-dark;
}

.syntax--entity.syntax--name.syntax--tag {
  color: @blue-gray-light;
}

.syntax--entity.syntax--other.syntax--attribute-name {
  color: @blue-gray-light;
}

.syntax--support.syntax--function {
  color: @blue;
}

.syntax--support.syntax--constant {
  color: @blue;
}

.syntax--support.syntax--type, .syntax--support.syntax--class {
  color: @blue;
}

.syntax--support.syntax--other.syntax--variable {
}

.syntax--invalid {
  color: @gray;
  background-color: @magenta;
}

.syntax--invalid.syntax--deprecated {
  color: @gray;
  background-color: @purple;
}
